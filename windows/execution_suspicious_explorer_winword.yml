# Rule version v1.0.1

- name: "Potential DLL SideLoading via Trusted Microsoft Programs"
  severity: "High"
  description: "Identifies an instance of a Windows trusted program that is known to be vulnerable to DLL Search Order Hijacking
                starting after being renamed or from a non-standard path. This is uncommon behavior and may indicate an attempt to evade
                defenses via side loading a malicious DLL within the memory space of one of those processes."
  solution: "Isolate the involved host to prevent further post-compromise behavior.
      Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
      identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, systems and web services.
      If triage identified malware, search the environment for additional compromised hosts. Implement temporary rules, procedures and network segmentation to contain malware.
      Stop suspicious processes. Immediately block identified Indicators of Compromise (IoCs).
      Inspect affected systems for additional malware backdoors, such as reverse shells, reverse proxies, or droppers that
      attackers could use to re-infect the system. Eliminate and block malicious artifacts identified during triage.
      Run a full scan with the anti-malware tool installed. This scan may reveal additional artifacts left in the system, persistence mechanisms and malware components.
      Determine the initial vector abused by the attacker and take measures to avoid reinfection through the same vector. If the malicious file was delivered via phishing,
      block the email sender from sending future emails, block malicious web pages, remove sender emails from mailboxes."
  category: "Defense Evasion"
  tactic: "Masquerading"
  reference:
    - "https://attack.mitre.org/tactics/TA0005/"
    - "https://attack.mitre.org/techniques/T1036"
  frequency: 60
  cache: 
    - allOf:
        - field: "logx.wineventlog.event.type"
          operator: "=="
          value: "start"
        - field: "logx.wineventlog.process.pe.original_file_name"
          operator: "regexp"
          value: "(WinWord.exe|EXPLORER.EXE|w3wp.exe|DISM.EXE)"
        - field: "logx.wineventlog.process.name"
          operator: "not regexp"
          value: "(winword.exe|explorer.exe|w3wp.exe|Dism.exe)"
        - field: "logx.wineventlog.process.executable"
          operator: "not regexp"
          value: "(:\\\\Windows\\\\explorer.exe|:\\\\Program Files\\\\Microsoft Office\\\\root\\\\Office(.+)\\\\WINWORD.EXE|:\\\\Program Files(.+)(x86)\\\\Microsoft Office\\\\root\\\\Office(.+)\\\\WINWORD.EXE|:\\\\Windows\\\\System32\\\\Dism.exe|:\\\\Windows\\\\SysWOW64\\\\Dism.exe|:\\\\Windows\\\\System32\\\\inetsrv\\\\w3wp.exe)"
      minCount: 1
      timeLapse: 60
      save:
        - field: "logx.wineventlog.event_data.SubjectUserName"
          alias: "SourceUser"
        - field: "logx.wineventlog.host.name"
          alias: "SourceHost"
        - field: "logx.wineventlog.event_data.SourceAddress"
          alias: "SourceIP"
        - field: "logx.wineventlog.event_data.SourcePort"
          alias: "SourcePort"
        - field: "logx.wineventlog.event_data.TargetUserName"
          alias: "DestinationUser"
        - field: "logx.wineventlog.event_data.DestAddress"
          alias: "DestinationIP"
        - field: "logx.wineventlog.event_data.DestPort"
          alias: "DestinationPort"