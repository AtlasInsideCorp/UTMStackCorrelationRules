# Rule version v1.0.1

- name: "Windows: Potential Remote Credential Access via Registry"
  severity: "High"
  description: "Identifies remote access to the registry to potentially dump credential data from the Security Account Manager (SAM)
                registry hive in preparation for credential access and privileges elevation."
  solution: "Isolate the involved hosts to prevent further post-compromise behavior.
      Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
      identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.
      Determine if other hosts were compromised.
      Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.
      Reimage the host operating system or restore the compromised files to clean versions.
      Ensure that the machine has the latest security updates and is not running unsupported Windows versions."
  category: "Credential Access"
  tactic: "OS Credential Dumping"
  reference:
    - "https://attack.mitre.org/tactics/TA0006/"
    - "https://attack.mitre.org/techniques/T1003/"
  frequency: 60
  cache: 
    - allOf:
        - field: "logx.wineventlog.event.outcome"
          operator: "=="
          value: "success"
        - field: "logx.wineventlog.event.action"
          operator: "=="
          value: "logged-in"
        - field: "logx.wineventlog.event_data.LogonType"
          operator: "=="
          value: "3"
        - field: "logx.wineventlog.user.name"
          operator: "not contain"
          value: "ANONYMOUS LOGON"
        - field: "logx.wineventlog.user.domain"
          operator: "not contain"
          value: "NT AUTHORITY"
        - field: "logx.wineventlog.source.ip"
          operator: "not in"
          value: "127.0.0.1,::1"
      minCount: 1
      timeLapse: 60
      save:
        - field: "logx.wineventlog.host.id"
          alias: "HostID"
        - field: "logx.wineventlog.user.id"
          alias: "UserID"
    - allOf:
        - field: "logx.wineventlog.event.action"
          operator: "=="
          value: "creation"
        - field: "logx.wineventlog.process.name"
          operator: "contain"
          value: "svchost.exe"
        - field: "logx.winevenlog.file.Ext.header_bytes"
          operator: "contain"
          value: "72656766"
        - field: "logx.wineventlog.user.id"
          operator: "regexp"
          value: "(S-1-5-21-|S-1-12-1-)"
        - field: "logx.wineventlog.file.size"
          operator: ">="
          value: 30000
        - field: "logx.wineventlog.file.path"
          operator: "not regexp"
          value: "(:\\\\Windows\\\\system32\\\\HKEY_LOCAL_MACHINE_SOFTWARE_Microsoft_(.+).registry|\\\\:\\\\Users\\\\(.+)\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\UsrClass.dat.LOG|\\\\:\\\\Users\\\\(.+)\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\UsrClass.dat|\\\\:\\\\Users\\\\(.+)\\\\ntuser.dat.LOG|\\\\:\\\\Users\\\\(.+)\\\\NTUSER.DAT)"
        - field: "logx.wineventlog.host.id"
          operator: "=="
          value: "{{.HostID}}"
        - field: "logx.wineventlog.user.id"
          operator: "=="
          value: "{{.UserID}}"
      minCount: 1
      timeLapse: 60
      save:
        - field: "logx.wineventlog.event_data.SubjectUserName"
          alias: "SourceUser"
        - field: "logx.wineventlog.host.name"
          alias: "SourceHost"
        - field: "logx.wineventlog.event_data.SourceAddress"
          alias: "SourceIP"
        - field: "logx.wineventlog.event_data.SourcePort"
          alias: "SourcePort"
        - field: "logx.wineventlog.event_data.TargetUserName"
          alias: "DestinationUser"
        - field: "logx.wineventlog.event_data.DestAddress"
          alias: "DestinationIP"
        - field: "logx.wineventlog.event_data.DestPort"
          alias: "DestinationPort"
