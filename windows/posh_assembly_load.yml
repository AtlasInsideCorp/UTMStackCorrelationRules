# Rule version v1.0.3

- name: "Windows: Suspicious .NET Reflection via PowerShell"
  severity: "High"
  description: "Detects the use of Reflection.Assembly to load PEs and DLLs in memory in PowerShell scripts. Attackers use this method
                to load executables and DLLs without writing to the disk, bypassing security solutions."
  solution: "Isolate the involved hosts to prevent further post-compromise behavior.
      If the triage identified malware, search the environment for additional compromised hosts.
      Implement temporary network rules, procedures, and segmentation to contain the malware.
      Stop suspicious processes. Immediately block the identified indicators of compromise (IoCs).
      Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.
      Remove and block malicious artifacts identified during triage.
      Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
      identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.
      Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.
      Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector."
  category: "Defense Evasion"
  tactic: "Process Injection"
  dataTypes: ["wineventlog"]
  reference:
    - "https://attack.mitre.org/tactics/TA0005/"
    - "https://attack.mitre.org/techniques/T1055/"
  frequency: 60
  cache: 
    - allOf:
        - field: "logx.wineventlog.message"
          operator: "regexp"
          value: "(\\[Reflection.Assembly\\]::Load)"
      minCount: 1
      timeLapse: 60
      save:
        - field: "logx.wineventlog.event_data.SubjectUserName"
          alias: "SourceUser"
        - field: "logx.wineventlog.host.name"
          alias: "DestinationHost"
        - field: "logx.wineventlog.event_data.IpAddress"
          alias: "DestinationIP"
        - field: "logx.wineventlog.event_data.IpPort"
          alias: "DestinationPort"
        - field: "logx.wineventlog.event_data.TargetUserName"
          alias: "DestinationUser"
