# Rule version v1.0.1

- name: "Windows: Detection of SUNBURST command and control activity"
  severity: "Medium"
  description: "This rule detects post-exploitation command and control activity of the SUNBURST backdoor."
  solution: "Isolate the involved host to prevent further post-compromise behavior.
      If the triage identified malware, search the environment for additional compromised hosts.
      Implement temporary network rules, procedures, and segmentation to contain the malware. Stop suspicious processes.
      Immediately block the identified indicators of compromise.
      Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
      attackers could use to reinfect the system. 
      Remove and block malicious artifacts identified during triage.
      Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.
      Reimage the host operating system and restore compromised files to clean versions."
  category: "Command and Control"
  tactic: "Supply Chain Compromise"
  reference:
    - "https://attack.mitre.org/tactics/TA0011/"
    - "https://attack.mitre.org/techniques/T1195/"
  frequency: 60
  cache: 
    - allOf:
        - field: "logx.wineventlog.event.type"
          operator: "=="
          value: "protocol"
        - field: "logx.wineventlog.network.protocol"
          operator: "=="
          value: "http"
        - field: "logx.wineventlog.process.name"
          operator: "regexp"
          value: "(ConfigurationWizard.exe|NetFlowService.exe|NetflowDatabaseMaintenance.exe|SolarWinds.Administration.exe|SolarWinds.BusinessLayerHost.exe|SolarWinds.BusinessLayerHostx64.exe|SolarWinds.Collector.Service.exe|SolarwindsDiagnostics.exe)"
        - field: "logx.wineventlog.http.request.body.content"
          operator: "not contain"
          value: "solarwinds.com"
      oneOf:
        - field: "logx.wineventlog.http.request.body.content"
          operator: "regexp"
          value: "(/swip/Upload.ashx(.+)(POST|PUT)|(POST|PUT)(.+)/swip/Upload.ashx)"
        - field: "logx.wineventlog.http.request.body.content"
          operator: "regexp"
          value: "(/swip/SystemDescription(.+)(GET|HEAD)|(GET|HEAD)(.+)/swip/SystemDescription)"
      minCount: 1
      timeLapse: 60
      save:
        save:
        - field: "logx.wineventlog.event_data.SubjectUserName"
          alias: "SourceUser"
        - field: "logx.wineventlog.host.name"
          alias: "SourceHost"
        - field: "logx.wineventlog.event_data.SourceAddress"
          alias: "SourceIP"
        - field: "logx.wineventlog.event_data.SourcePort"
          alias: "SourcePort"
        - field: "logx.wineventlog.event_data.TargetUserName"
          alias: "DestinationUser"
        - field: "logx.wineventlog.event_data.DestAddress"
          alias: "DestinationIP"
        - field: "logx.wineventlog.event_data.DestPort"
          alias: "DestinationPort"
